@page "/customer"
@using Blazor.Models
@inject HttpClient http

<div class="container">
    <div class="text-right">
        <button type="submit" class="btn btn-danger" @onclick="DeleteAllCustomers">Delete all Customers!</button>
    </div>

    <EditForm class="my-5" Model="@customer" OnSubmit="@CreateCustomer">
        <h5 class="mb-3">create a customer</h5>
        <div class="form-group">
            <div class="row">
                <div class="col">
                    <input type="text" class="form-control" placeholder="First Name" @bind="customer.FirstName" />
                </div>
                <div class="col">
                    <input type="text" class="form-control" placeholder="Last Name" @bind="customer.LastName" />
                </div>
            </div>
        </div>
        <div class="form-group">
            <input type="text" class="form-control" placeholder="Email" @bind="customer.Email" />
        </div>
        <button type="submit" class="btn btn-success">Create Customer</button>
    </EditForm>

    <table class="table">
        <thead class="thead-light">
            <tr>
                <th scope="col">#</th>
                <th scope="col">FirstName</th>
                <th scope="col">LastName</th>
                <th scope="col" colspan="2">Email</th>
            </tr>
        </thead>
        @if (customers != null)
        {
            <tbody>
                @foreach (var customer in customers)
                {
                    <tr>
                        <th scope="row">@customer.Id</th>
                        <td>@customer.FirstName</td>
                        <td>@customer.LastName</td>
                        <td>@customer.Email</td>
                        <td class="text-center">
                            <span style="cursor:pointer" class="oi oi-trash" @onclick="()=>DeleteCustomer(customer.Id)"></span>
                        </td>
                    </tr>
                }
            </tbody>
        }
    </table>





</div>




@code {



    private List<CustomerModel> customers;
    private CustomerCreateModel customer;



    private async Task GetCustomers()
    {
        customers = await http.GetJsonAsync<List<CustomerModel>>("https://localhost:44381/api/customer");
        StateHasChanged();
    }
    private async Task CreateCustomer()
    {
        await http.PostJsonAsync<CustomerCreateModel>("https://localhost:44381/api/customer", customer);
        customer = new CustomerCreateModel();
        await GetCustomers();
    }
    private async Task DeleteAllCustomers()
    {
        await http.DeleteAsync("https://localhost:44381/api/customer/all");
        await GetCustomers();



    }



    private async Task DeleteCustomer(int id)
    {
        await http.DeleteAsync($"https://localhost:44381/api/customer/{id}");
        await GetCustomers();
    }



    protected override async Task OnInitializedAsync()
    {
        customer = new CustomerCreateModel();
        await GetCustomers();
    }
}